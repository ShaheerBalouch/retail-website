from website import db, login_managerfrom werkzeug.security import generate_password_hash, check_password_hashfrom flask_login import UserMixinclass User(UserMixin, db.Model):    id = db.Column(db.Integer, primary_key=True)    username = db.Column(db.String(15), unique=True, nullable=False)    first_name = db.Column(db.String(30), nullable=False)    last_name = db.Column(db.String(30), nullable=False)    email = db.Column(db.String(120), unique=True, nullable=False)    password_hash = db.Column(db.String(128))    password = db.Column(db.String(60), nullable=False)    shopping_cart = db.relationship('Shopping_Cart', backref='user', lazy=True)    wishlist = db.relationship('Wishlist', backref='user', lazy=True)    def __repr__(self):        return f"('{self.username}', '{self.email}')"    @property    def password(self):        raise AttributeError('password is not a readable attribute')    @password.setter    def password(self, password):        self.password_hash = generate_password_hash(password)    def verify_password(self, password):        return check_password_hash(self.password_hash, password)@login_manager.user_loaderdef load_user(user_id):    return User.query.get(int(user_id))        class Shopping_Cart(db.Model):    id = db.Column(db.Integer, primary_key = True)    item_id = db.Column(db.Integer, db.ForeignKey('items.id'), nullable=False)    user_id = db.Column(db.Integer, db.ForeignKey('user.id'), nullable=False)    quantity = db.Column(db.Integer)        def __repr__(self):        return f"('{self.item_id}', '{self.user_id}', '{self.quantity}')"class Items(db.Model):    id = db.Column(db.Integer, primary_key=True)    name = db.Column(db.String(120), nullable=False)    price = db.Column(db.Float, nullable=False)    description = db.Column(db.Text, nullable=False)    image = db.Column(db.String(40), nullable=False, default='default.jpg')    weight = db.Column(db.Float, nullable=False)    feature1 = db.Column(db.Text, nullable=False)    feature2 = db.Column(db.Text, nullable=False)    cart_item = db.relationship('Shopping_Cart', backref='items', lazy=True)    wish_item = db.relationship('Wishlist', backref='items', lazy=True)    def __repr__(self):        return f"('{self.name}', '{self.price}', '{self.description}')"class Wishlist(db.Model):    id = db.Column(db.Integer, primary_key=True)    item_id = db.Column(db.Integer, db.ForeignKey('items.id'), nullable=False)    user_id = db.Column(db.Integer, db.ForeignKey('user.id'), nullable=False)    quantity = db.Column(db.Integer)    def __repr__(self):        return f"('{self.item_id}', '{self.user_id}', '{self.quantity}')"            